import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { notFound } from "next/navigation";
import { getMessages, setRequestLocale } from "next-intl/server";
import HeaderNavigation from "@/common/components/HeaderNavigation";
import { routing } from "@/i18n/routing";
import LocalProvider from "@/providers/LocalProvider";
import ReactQueryProvider from "@/providers/ReactQueryProvider";
import { ReduxToolkitProvider } from "@/providers/ReduxToolkitProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "IQ-Tech Task",
  description: "Generated by Ahmed Hassanin",
};

export default async function LocaleLayout({
  children,
  params = { locale: "en" },
}: Readonly<{
  children: React.ReactNode;
  params: { locale?: string };
}>) {
  const { locale } = await params;
  const messages = await getMessages();

  if (!routing.locales.includes(locale as "ar" | "en")) {
    notFound();
  }
  setRequestLocale(locale ?? "en");

  return (
    <html lang={locale} dir={locale === "en" ? "ltr" : "rtl"}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReduxToolkitProvider>
          <LocalProvider locale={locale ?? "en"} messages={messages}>
            <ReactQueryProvider>
              <HeaderNavigation />
              <main className="relative max-h-screen overflow-x-hidden">
                {children}
              </main>
            </ReactQueryProvider>
          </LocalProvider>
        </ReduxToolkitProvider>
      </body>
    </html>
  );
}
